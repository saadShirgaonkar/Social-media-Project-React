{"version":3,"file":"okta-react.esm.js","sources":["../../src/OktaContext.ts","../../src/OktaError.tsx","../../src/Security.tsx","../../src/withOktaAuth.tsx","../../src/LoginCallback.tsx","../../src/SecureRoute.tsx"],"sourcesContent":["/*\n * Copyright (c) 2020-Present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\nimport * as React from 'react';\nimport { AuthState, OktaAuth } from '@okta/okta-auth-js';\n\nexport type OnAuthRequiredFunction = (oktaAuth: OktaAuth) => Promise<void> | void;\nexport type OnAuthResumeFunction = () => void;\n\nexport type RestoreOriginalUriFunction = (oktaAuth: OktaAuth, originalUri: string) => Promise<void> | void;\n\nexport interface IOktaContext {\n    oktaAuth: OktaAuth;\n    authState: AuthState | null;\n    _onAuthRequired?: OnAuthRequiredFunction;\n}\n\nconst OktaContext = React.createContext<IOktaContext | null>(null);\n\nexport const useOktaAuth = (): IOktaContext => React.useContext(OktaContext) as IOktaContext;\n\nexport default OktaContext;\n","/*\n * Copyright (c) 2020-Present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport * as React from 'react';\n\nconst OktaError: React.FC<{ error: Error }> = ({ error }) => { \n  if(error.name && error.message) { \n    return <p>{error.name}: {error.message}</p>;\n  }\n  return <p>Error: {error.toString()}</p>;\n};\n\nexport default OktaError;\n","/*!\n * Copyright (c) 2017-Present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport * as React from 'react';\nimport { AuthSdkError, AuthState, OktaAuth } from '@okta/okta-auth-js';\nimport OktaContext, { OnAuthRequiredFunction, RestoreOriginalUriFunction } from './OktaContext';\nimport OktaError from './OktaError';\n\nconst Security: React.FC<{\n  oktaAuth: OktaAuth,\n  restoreOriginalUri: RestoreOriginalUriFunction, \n  onAuthRequired?: OnAuthRequiredFunction,\n  children?: React.ReactNode\n} & React.HTMLAttributes<HTMLDivElement>> = ({ \n  oktaAuth,\n  restoreOriginalUri, \n  onAuthRequired, \n  children\n}) => { \n  const [authState, setAuthState] = React.useState(() => {\n    if (!oktaAuth) {\n      return null;\n    }\n    return oktaAuth.authStateManager.getAuthState();\n  });\n  const [oktaAuthMajorVersion] = React.useState(() => {\n    if (!oktaAuth || !oktaAuth._oktaUserAgent) {\n      return null;\n    }\n\n    const oktaAuthVersion = oktaAuth._oktaUserAgent.getVersion();\n    const majorVersion = oktaAuthVersion?.split('.')[0];\n    return majorVersion;\n  });\n\n  React.useEffect(() => {\n    if (!oktaAuth || !restoreOriginalUri) {\n      return;\n    }\n\n    // Add default restoreOriginalUri callback\n    if (oktaAuth.options.restoreOriginalUri && restoreOriginalUri) {\n      console.warn('Two custom restoreOriginalUri callbacks are detected. The one from the OktaAuth configuration will be overridden by the provided restoreOriginalUri prop from the Security component.');\n    }\n    oktaAuth.options.restoreOriginalUri = async (oktaAuth: unknown, originalUri: string) => {\n      restoreOriginalUri(oktaAuth as OktaAuth, originalUri);\n    };\n\n    // Add okta-react userAgent\n    if (oktaAuth._oktaUserAgent) {\n      oktaAuth._oktaUserAgent.addEnvironment(`${process.env.PACKAGE_NAME}/${process.env.PACKAGE_VERSION}`);\n    } else {\n      console.warn('_oktaUserAgent is not available on auth SDK instance. Please use okta-auth-js@^5.3.1 .');\n    }\n\n    // Update Security provider with latest authState\n    const handler = (authState: AuthState) => {\n      setAuthState(authState);\n    };\n    oktaAuth.authStateManager.subscribe(handler);\n\n    // Trigger an initial change event to make sure authState is latest\n    if (!oktaAuth.isLoginRedirect()) {\n      // Calculates initial auth state and fires change event for listeners\n      // Also starts the token auto-renew service\n      oktaAuth.start();\n    }\n\n    return () => {\n      oktaAuth.authStateManager.unsubscribe(handler);\n      oktaAuth.stop();\n    };\n  }, [oktaAuth, restoreOriginalUri]);\n\n  if (!oktaAuth) {\n    const err = new AuthSdkError('No oktaAuth instance passed to Security Component.');\n    return <OktaError error={err} />;\n  }\n\n  if (!restoreOriginalUri) {\n    const err = new AuthSdkError('No restoreOriginalUri callback passed to Security Component.');\n    return <OktaError error={err} />;\n  }\n\n  if (oktaAuthMajorVersion !== process.env.AUTH_JS_MAJOR_VERSION \n      // use SKIP_VERSION_CHECK flag to control version check in tests\n      && process.env.SKIP_VERSION_CHECK !== '1') {\n    const err = new AuthSdkError(`Passed in oktaAuth is not compatible with the SDK, okta-auth-js version ${process.env.AUTH_JS_MAJOR_VERSION}.x is the current supported version.`);\n    return <OktaError error={err} />;\n  }\n\n  return (\n    <OktaContext.Provider value={{ \n      oktaAuth, \n      authState, \n      _onAuthRequired: onAuthRequired\n    }}>\n      {children}\n    </OktaContext.Provider>\n  );\n};\n\nexport default Security;\n","/*\n * Copyright (c) 2020-Present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport * as React from 'react';\nimport { useOktaAuth, IOktaContext } from './OktaContext';\n\nconst withOktaAuth = <P extends IOktaContext>(\n  ComponentToWrap: React.ComponentType<P>\n): React.FC<Omit<P, keyof IOktaContext>> => { \n  const WrappedComponent = (props: Omit<P, keyof IOktaContext>) => { \n    const oktaAuthProps = useOktaAuth();\n    return <ComponentToWrap {...oktaAuthProps as IOktaContext } {...props as P} />;\n  };\n  WrappedComponent.displayName = 'withOktaAuth_' + (ComponentToWrap.displayName || ComponentToWrap.name);\n  return WrappedComponent;\n};\n\nexport default withOktaAuth;\n","/*\n * Copyright (c) 2017-Present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport * as React from 'react';\nimport { useOktaAuth, OnAuthResumeFunction } from './OktaContext';\nimport OktaError from './OktaError';\n\ninterface LoginCallbackProps {\n  errorComponent?: React.ComponentType<{ error: Error }>;\n  onAuthResume?: OnAuthResumeFunction;\n  loadingElement?: React.ReactElement;\n}\n\nconst LoginCallback: React.FC<LoginCallbackProps> = ({ errorComponent, loadingElement = null, onAuthResume }) => { \n  const { oktaAuth, authState } = useOktaAuth();\n  const [callbackError, setCallbackError] = React.useState(null);\n\n  const ErrorReporter = errorComponent || OktaError;\n  React.useEffect(() => {\n    if (onAuthResume && oktaAuth.isInteractionRequired?.() ) {\n      onAuthResume();\n      return;\n    }\n    oktaAuth.handleLoginRedirect().then(() => {\n      // In `<Security>` component service was not started in case of login redirect.\n      // Start it now after `restoreOriginalUri` has been called and route changed.\n      oktaAuth.start();\n    }).catch(e => {\n      setCallbackError(e);\n    });\n  }, [oktaAuth]);\n\n  const authError = authState?.error;\n  const displayError = callbackError || authError;\n  if (displayError) { \n    return <ErrorReporter error={displayError}/>;\n  }\n\n  return loadingElement;\n};\n\nexport default LoginCallback;\n","/*\n * Copyright (c) 2017-Present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport * as React from 'react';\nimport { useOktaAuth, OnAuthRequiredFunction } from './OktaContext';\nimport { Route, useRouteMatch, RouteProps } from 'react-router-dom';\nimport { toRelativeUrl } from '@okta/okta-auth-js';\n\nconst SecureRoute: React.FC<{\n  onAuthRequired?: OnAuthRequiredFunction;\n} & RouteProps & React.HTMLAttributes<HTMLDivElement>> = ({ \n  onAuthRequired, \n  ...routeProps \n}) => { \n  const { oktaAuth, authState, _onAuthRequired } = useOktaAuth();\n  const match = useRouteMatch(routeProps);\n  const pendingLogin = React.useRef(false);\n\n  React.useEffect(() => {\n    const handleLogin = async () => {\n      if (pendingLogin.current) {\n        return;\n      }\n\n      pendingLogin.current = true;\n\n      const originalUri = toRelativeUrl(window.location.href, window.location.origin);\n      oktaAuth.setOriginalUri(originalUri);\n      const onAuthRequiredFn = onAuthRequired || _onAuthRequired;\n      if (onAuthRequiredFn) {\n        await onAuthRequiredFn(oktaAuth);\n      } else {\n        await oktaAuth.signInWithRedirect();\n      }\n    };\n\n    // Only process logic if the route matches\n    if (!match) {\n      return;\n    }\n\n    if (!authState) {\n      return;\n    }\n\n    if (authState.isAuthenticated) {\n      pendingLogin.current = false;\n      return;\n    }\n\n    // Start login if app has decided it is not logged in and there is no pending signin\n    if(!authState.isAuthenticated) { \n      handleLogin();\n    }  \n\n  }, [\n    !!authState,\n    authState ? authState.isAuthenticated : null, \n    oktaAuth, \n    match, \n    onAuthRequired, \n    _onAuthRequired\n  ]);\n\n  if (!authState || !authState.isAuthenticated) {\n    return null;\n  }\n\n  return (\n    <Route\n      { ...routeProps }\n    />\n  );\n};\n\nexport default SecureRoute;\n"],"names":["OktaContext","React","createContext","useOktaAuth","useContext","OktaError","error","name","message","toString","Security","oktaAuth","restoreOriginalUri","onAuthRequired","children","useState","authStateManager","getAuthState","authState","setAuthState","_oktaUserAgent","oktaAuthVersion","getVersion","majorVersion","split","oktaAuthMajorVersion","useEffect","options","console","warn","originalUri","addEnvironment","handler","subscribe","isLoginRedirect","start","unsubscribe","stop","err","AuthSdkError","process","env","SKIP_VERSION_CHECK","Provider","value","_onAuthRequired","withOktaAuth","ComponentToWrap","WrappedComponent","props","oktaAuthProps","displayName","LoginCallback","errorComponent","loadingElement","onAuthResume","callbackError","setCallbackError","ErrorReporter","isInteractionRequired","handleLoginRedirect","then","e","authError","displayError","SecureRoute","routeProps","match","useRouteMatch","pendingLogin","useRef","handleLogin","current","toRelativeUrl","window","location","href","origin","setOriginalUri","onAuthRequiredFn","signInWithRedirect","isAuthenticated","Route"],"mappings":"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"}